#!/bin/bash

source ./cybrtest.config

export CURL="curl -s"
export BASE_URL=http://localhost:8080/cybr
export DEBUG=true

main() {
  # Login as admin to PAS
  PASauthnCreds=$(echo "$PAS_ADMIN_NAME:$PAS_ADMIN_PASSWORD" | base64)
  pasAuthnResponse=$($CURL -H "Authorization: Basic $PASauthnCreds" -H "Content-Type: application/json" "$BASE_URL/paslogin")
  test "paslogin" "$pasAuthnResponse"

  # Login as admin to Conjur
  ConjurAuthnCreds=$(echo "$CONJUR_ADMIN_NAME:$CONJUR_ADMIN_PASSWORD" | base64)
  conjurAuthnResponse=$($CURL -H "Authorization: Basic $ConjurAuthnCreds" -H "Content-Type: application/json" "$BASE_URL/conjurlogin")
  test "conjurlogin" "$conjurAuthnResponse"

  # Add a safe w/ Conjur synch policy
  safeAdd=$($CURL -X POST --url "$BASE_URL/safes?safeName=$PAS_SAFE_NAME&cpmName=$PAS_CPM_NAME&lobName=$PAS_LOB_NAME&vaultName=$PAS_VAULT_NAME")
  test "safeAdd" "$safeAdd"

  # Add an account to the safe
  accountAdd=$($CURL -X POST --url "$BASE_URL/accounts?safeName=$PAS_SAFE_NAME&accountName=$PAS_ACCOUNT_NAME&platformId=$PAS_PLATFORM_ID&address=$PAS_ACCOUNT_ADDRESS&userName=$PAS_ACCOUNT_USERNAME&secretType=$PAS_ACCOUNT_SECRET_TYPE&secretValue=$PAS_ACCOUNT_SECRET_VALUE");
  test "accountAdd" "$accountAdd"

  # Create a Conjur base policy branch for project
  policyText="- !policy $PROJECT_NAME"
  # Create a Conjur identity
  policyAdd=$($CURL --request POST --url "$BASE_URL/conjurpolicies?policyText=$policyText&policyBranch=root")
  test "conjurPolicyAdd" "$policyAdd"

  # Create a Conjur idenitity, apply to policy branch for project
  policyText="- !host $CONJUR_IDENTITY"
  policyAdd=$($CURL --request POST --url "$BASE_URL/conjurpolicies?policyText=$policyText&policyBranch=$PROJECT_NAME")
  test "conjurPolicyAdd" "$policyAdd"

  # Grant group role to Conjur identity
  authnResponse=$($CURL --request POST --url "$BASE_URL/conjuraccessgrants?identityName=$CONJUR_IDENTITY&groupRoleName=$CONJUR_GROUP_ROLE&policyBranch=$PROJECT_NAME")
  test "accessgrant" "$authnResponse"
}

###################################
test() {
  if ! $DEBUG; then return; fi
  local funcname=$1; shift
  local value="$(echo $1 | tr -d '\r\n')"; shift

  if [[ $value == null ]]; then
    echo "$funcname returned null."
  else
    echo "$funcname returned:"
    echo "$value"
    echo
  fi
}

main "$@"
