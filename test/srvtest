#!/bin/bash

source ./cybrtest.config

export CURL="curl -s"
export BASE_URL=http://localhost:8080/cybr
export DEBUG=true

main() {
  # Login as admin to PAS
  PASauthnCreds=$(echo "$PAS_ADMIN_NAME:$PAS_ADMIN_PASSWORD" | base64)
  pasAuthnResponse=$($CURL -H "Authorization: Basic $PASauthnCreds" -H "Content-Type: application/json" "$BASE_URL/pas/login")
  test "paslogin" "$pasAuthnResponse"

  safeList=$($CURL --url $BASE_URL/pas/safes)
  test "listSafes" "$safeList"

exit

  safeAdd=$($CURL -X POST --url "$BASE_URL/pas/safes?safeName=$PAS_SAFE_NAME&cpmName=$PAS_CPM_NAME")
  test "addSafe" "$safeAdd"

#  safeAdd=$($CURL -X POST --url "$BASE_URL/safes?safeName=$PAS_SAFE_NAME&cpmName=$PAS_CPM_NAME&lobName=$PAS_LOB_NAME&vaultName=$PAS_VAULT_NAME")
#  test "addSafe" "$safeAdd"

  safeUpdate=$($CURL -X PUT --url "$BASE_URL/safes?safeName=$PAS_SAFE_NAME&lobName=$PAS_LOB_NAME&vaultName=$PAS_VAULT_NAME")
  test "updateSafe" "$safeUpdate"

  accountList=$($CURL --url "$BASE_URL/accounts?safeName=$PAS_SAFE_NAME")
  test "listAccounts" "$accountList"

  accountAdd=$($CURL -X POST --url "$BASE_URL/accounts?safeName=$PAS_SAFE_NAME&accountName=$PAS_ACCOUNT_NAME&platformId=$PAS_PLATFORM_ID&address=$PAS_ACCOUNT_ADDRESS&userName=$PAS_ACCOUNT_USERNAME&secretType=$PAS_ACCOUNT_SECRET_TYPE&secretValue=$PAS_ACCOUNT_SECRET_VALUE");
  test "addAccount" "$accountAdd"

  accountList=$($CURL --url "$BASE_URL/accounts?safeName=$PAS_SAFE_NAME")
  test "listAccounts" "$accountList"
}

###################################
test() {
  if ! $DEBUG; then return; fi
  local funcname=$1; shift
  local value="$(echo $1 | tr -d '\r\n')"; shift

  if [[ $value == null ]]; then
    echo "$funcname returned null."
  else
    echo "$funcname returned:"
    echo "$value"
    echo
  fi
}

main "$@"
