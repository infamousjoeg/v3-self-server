#!/bin/bash

# These tests simulate the workflow of the two UIs, first submitting an access request,
# displaying unapproved requests, approving, displaying approved/unprovisioned requests,
# provisioning requests, displaying provisioned requests, revoking, and displaying revoked
# requests. Rejecting unapproved or unprovisioned requests is not tested.

source ./cybrtest.config

export CURL="curl -s"
export BASE_URL=http://localhost:8080/cybr
export DEBUG=true

# accessrequest json record - same format as submitted from access request UI
jsonTest="{\"projectName\":\"$PROJECT_NAME\",\"requestor\":\"$PROJECT_REQUESTOR\", \"approved\": 0, \"environment\":\"$PROJECT_ENVIRONMENT\", \"pasVaultName\":\"$PAS_VAULT_NAME\", \"pasSafeName\":\"$PAS_SAFE_NAME\", \"pasCpmName\":\"$PAS_CPM_NAME\", \"pasLobName\":\"$PAS_LOB_NAME\", \"appIdName\":\"$PROJECT_IDENTITY\", \"appAuthnMethod\":\"authn-k8s\"}"

main() {

  echo "Submitting unapproved access request (appgovdb POST)..."
  appDbResponse=$($CURL -X POST -H "Content-Type: application/json" --data "$jsonTest" "$BASE_URL/appgovdb")
  test "submitRequest" "$appDbResponse"

  accReqId=$(echo $appDbResponse | jq .accessRequestId)
  echo "Access request id: $accReqId"

  read -n 1 -s -r -p "Press any key to get unapproved access requests (appgovdb GET)..."
  echo 

  appDbResponse=$($CURL -H "Content-Type: application/json" "$BASE_URL/appgovdb?filter=unapproved")
  test "getUnapproved" "$appDbResponse"

  read -n 1 -s -r -p "Press any key to approve access request $accReqId (appgovdb PUT)..."
  echo 

  appDbResponse=$($CURL -X PUT -H "Content-Type: application/json" "$BASE_URL/appgovdb?accReqId=$accReqId&status=approved")
  test "approveRequest" "$appDbResponse"

  read -n 1 -s -r -p "Press any key to get unprovisioned access requests (appgovdb GET)..."
  echo 

  appDbResponse=$($CURL -H "Content-Type: application/json" "$BASE_URL/appgovdb?filter=unprovisioned")
  test "getUnprovisioned" "$appDbResponse"

  read -n 1 -s -r -p "Press any key to provision approved access request $accReqId (/provision POST)..."
  echo 
  
  provResponse=$($CURL -X POST "$BASE_URL/provision?accReqId=$accReqId")
  test "provisionRequest" "$provResponse"

  read -n 1 -s -r -p "Press any key to get provisioned access requests (appgovdb GET)..."
  echo 

  appDbResponse=$($CURL -H "Content-Type: application/json" "$BASE_URL/appgovdb?filter=provisioned")
  test "getProvisioned" "$appDbResponse"

  read -n 1 -s -r -p "Press any key to revoke provisioned access requests (provision DELETE)..."
  echo 

  provResponse=$($CURL -X DELETE "$BASE_URL/provision?accReqId=$accReqId")
  test "revokeRequest" "$provResponse"

  read -n 1 -s -r -p "Press any key to get revoked access requests (appgovdb GET)..."
  echo 
  
  appDbResponse=$($CURL -H "Content-Type: application/json" "$BASE_URL/appgovdb?filter=revoked")
  test "getRevoked" "$appDbResponse"

}

###################################
test() {
  if ! $DEBUG; then return; fi
  local funcname=$1; shift
  local value="$(echo $1 | tr -d '\r\n')"; shift

  if [[ $value == null ]]; then
    echo "$funcname returned null."
  else
    echo "$funcname returned:"
    echo "$value"
    echo
  fi
}

main "$@"
